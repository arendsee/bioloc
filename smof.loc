@type

fcut     :: Bioseq -> Bioseq
fclean   :: Bioseq -> Bioseq
ffilter  :: Bioseq -> Bioseq
fgrep    :: Bioseq -> *
fmd5sum  :: Bioseq -> Text
fhead    :: Bioseq -> Integer -> Bioseq
fpermute :: Bioseq -> Bioseq
freverse :: Bioseq -> Bioseq
frevcmp  :: Bioseq -> Bioseq
fsample  :: Bioseq -> Integer -> Bioseq
fsniff   :: Bioseq -> Text
fsort    :: Bioseq -> Bioseq
fstat    :: Bioseq -> Text
fsubseq  :: Bioseq -> Bioseq
ftail    :: Bioseq -> Integer -> Bioseq
funiq    :: Bioseq -> Bioseq
fwc      :: Bioseq -> Text

fcut_version     :: NULL -> Version
fclean_version   :: NULL -> Version
ffilter_version  :: NULL -> Version
fgrep_version    :: NULL -> Version
fmd5sum_version  :: NULL -> Version
fhead_version    :: NULL -> Version
fpermute_version :: NULL -> Version
freverse_version :: NULL -> Version
frevcmp_version  :: NULL -> Version
fsample_version  :: NULL -> Version
fsniff_version   :: NULL -> Version
fsort_version    :: NULL -> Version
fstat_version    :: NULL -> Version
fsubseq_version  :: NULL -> Version
ftail_version    :: NULL -> Version
funiq_version    :: NULL -> Version
fwc_version      :: NULL -> Version

fcut_exists     :: NULL -> Bool
fclean_exists   :: NULL -> Bool
ffilter_exists  :: NULL -> Bool
fgrep_exists    :: NULL -> Bool
fmd5sum_exists  :: NULL -> Bool
fhead_exists    :: NULL -> Bool
fpermute_exists :: NULL -> Bool
freverse_exists :: NULL -> Bool
frevcmp_exists  :: NULL -> Bool
fsample_exists  :: NULL -> Bool
fsniff_exists   :: NULL -> Bool
fsort_exists    :: NULL -> Bool
fstat_exists    :: NULL -> Bool
fsubseq_exists  :: NULL -> Bool
ftail_exists    :: NULL -> Bool
funiq_exists    :: NULL -> Bool
fwc_exists      :: NULL -> Bool

@alias bash

fcut     :: smof_cut
fclean   :: smof_clean
ffilter  :: smof_filter
fgrep    :: smof_grep
fmd5sum  :: smof_md5sum
fhead    :: smof_head
fpermute :: smof_permute
freverse :: smof_reverse
frevcmp  :: smof_revcmp
fsample  :: smof_sample
fsniff   :: smof_sniff
fsort    :: smof_sort
fstat    :: smof_stat
fsubseq  :: smof_subseq
ftail    :: smof_tail
funiq    :: smof_uniq
fwc      :: smof_wc


fcut_version     ,
fclean_version   ,
ffilter_version  ,
fgrep_version    ,
fmd5sum_version  ,
fhead_version    ,
fpermute_version ,
freverse_version ,
frevcmp_version  ,
fsample_version  ,
fsniff_version   ,
fsort_version    ,
fstat_version    ,
fsubseq_version  ,
ftail_version    ,
funiq_version    ,
fwc_version      :: smof_version

fcut_exists     ,
fclean_exists   ,
ffilter_exists  ,
fgrep_exists    ,
fmd5sum_exists  ,
fhead_exists    ,
fpermute_exists ,
freverse_exists ,
frevcmp_exists  ,
fsample_exists  ,
fsniff_exists   ,
fsort_exists    ,
fstat_exists    ,
fsubseq_exists  ,
ftail_exists    ,
funiq_exists    ,
fwc_exists      :: smof_exists

@source bash

smof_exists() {
    smof -v | grep -q "smof"
}

smof_version() {
    smof -v
}

smof_cut() {
    smof cut $@
}
smof_clean() {
    smof clean $@
}
smof_filter() {
    smof filter $@
}
smof_grep() {
    smof grep $@
}
smof_md5sum() {
    smof md5sum $@
}
smof_head() {
    smof head -$2 $1 $@
}
smof_permute() {
    smof permute $@
}
smof_reverse() {
    smof reverse --no-validate $1
}
smof_revcmp() {
    smof reverse --complement --no-validate $1
}
smof_sample() {
    smof sample $1 -n $2 $@
}
smof_sniff() {
    smof sniff $@
}
smof_sort() {
    smof sort $@
}
smof_stat() {
    smof stat $@
}
smof_subseq() {
    smof subseq $@
}
smof_tail() {
    smof tail -$2 $1 $@
}
smof_uniq() {
    smof uniq $@
}
smof_wc() {
    smof wc $@
}


@doc
fcut      ::  "emulates UNIX cut command, where fields are entries"
fclean    ::  "cleans fasta files"
ffilter   ::  "extracts sequences meeting the given conditions"
grep      ::  "roughly emulates the UNIX grep command"
fmd5sum   ::  "calculate an md5 checksum for the input sequences"
fhead     ::  "writes the first sequences in a file"
fpermute  ::  "randomly order sequence"
freverse  ::  "reverse each sequence (or reverse complement)"
fsample   ::  "randomly select entries from fasta file"
fsniff    ::  "extract info about the sequence"
fsort     ::  "sort sequences"
fstat     ::  "calculate sequence statistics"
fsubseq   ::  "extract subsequence from each entry (revcomp if a<b)"
ftail     ::  "writes the last sequences in a file"
funiq     ::  "count, omit, or merge repeated entries"
fwc       ::  "roughly emulates the UNIX wc command"
